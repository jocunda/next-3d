/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {  useMemo, useState, useEffect, useRef } from "react";
import { useFBX, useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import * as THREE from "three";

export function AvatarRPM(props) {
  // const { animation } = props;
  const [hovered, setHovered] = useState(false)
  const [index, setIndex] = useState(3)
  
  const group = useRef();
  const { nodes, materials } = useGLTF("models/avatarRPM.glb");

  const loadFBXAnimation = (animationPath, name) => {
    const { animations } = useFBX(animationPath);
    animations[0].name = name;
    return animations[0];
  };

  const animations = [
    loadFBXAnimation("animations/Idle.fbx", "Idle"),
    loadFBXAnimation("animations/HandleIdle.fbx", "HandIdle"),
    loadFBXAnimation("animations/HotIdle.fbx", "HotIdle"),
    loadFBXAnimation("animations/Greeting.fbx", "Greeting"),
  ];
  console.log(animations[0].name)

  const { actions } = useAnimations(animations, group);

  useFrame((state) => {
    const target = new THREE.Vector3(state.mouse.x, state.mouse.y, 1)
    group.current.getObjectByName("Head").lookAt(target)
  })

   const animationName = useMemo(() => animations[index].name, [index]);

  useEffect(() => {
    actions[animationName].reset().fadeIn(0.5).play();
    return () => {
      actions[animationName].reset().fadeOut(0.5);
    };
  }, [animationName]);

  useEffect(() => void (document.body.style.cursor = hovered ? "pointer" : "auto"), [hovered])

  return (
  <group {...props} ref={group} dispose={null}>
      <group
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
        onClick={() => setIndex(index === 0 ? 3 : index - 1)}
      >
      <primitive object={nodes.Hips} />
      <skinnedMesh
        name="EyeLeft"
        geometry={nodes.EyeLeft.geometry}
        material={materials.Wolf3D_Eye}
        skeleton={nodes.EyeLeft.skeleton}
        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
      />
      <skinnedMesh
        name="EyeRight"
        geometry={nodes.EyeRight.geometry}
        material={materials.Wolf3D_Eye}
        skeleton={nodes.EyeRight.skeleton}
        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
      />
      <skinnedMesh
        name="Wolf3D_Head"
        geometry={nodes.Wolf3D_Head.geometry}
        material={materials.Wolf3D_Skin}
        skeleton={nodes.Wolf3D_Head.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
      />
      <skinnedMesh
        name="Wolf3D_Teeth"
        geometry={nodes.Wolf3D_Teeth.geometry}
        material={materials.Wolf3D_Teeth}
        skeleton={nodes.Wolf3D_Teeth.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Body.geometry}
        material={materials.Wolf3D_Body}
        skeleton={nodes.Wolf3D_Body.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
        material={materials.Wolf3D_Outfit_Bottom}
        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
        material={materials.Wolf3D_Outfit_Footwear}
        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Top.geometry}
        material={materials.Wolf3D_Outfit_Top}
        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Hair.geometry}
        material={materials.Wolf3D_Hair}
        skeleton={nodes.Wolf3D_Hair.skeleton}
          />
    </group>
  </group>
  );
}

useGLTF.preload("models/avatarRPM.glb");